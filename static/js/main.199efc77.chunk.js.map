{"version":3,"sources":["Gift.js","Santa.js","Obstacle.js","Game.js","GameOver.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["Gift","props","moveGift","newX","state","giftPositionX","speed","clearInterval","intervalId","removeCallback","giftKey","setState","moveCallback","giftPositionY","type","giftImage","giftType","Math","random","id","round","window","innerWidth","innerHeight","image","moveIntervalId","setInterval","this","className","style","top","left","src","alt","Component","Santa","moveSantaDown","positionY","newY","positionX","moveSantaUp","handleKeyPress","event","keyCode","document","addEventListener","removeEventListener","Obstacle","moveObstacle","obstaclePositionX","obstacleKey","obstaclePositionY","obstacleImage","Game","countdown","newCountdown","countdownIntervalId","newGift","gifts","giftsArray","push","length","removeGift","key","newGiftsArray","newObstacle","obstacles","obstacleArray","removeObstacle","newObstacleArray","gameOver","points","record","localStorage","setItem","gameOverCallback","detectCollisionCallback","x","y","w","h","santaX","santaPositionX","santaY","santaPositionY","getElementById","play","saveSantaPositionCallback","parseInt","getItem","isNumber","giftIntervalId","obstacleIntervalId","giftInterval","obstacleInterval","countdownInterval","autoPlay","loop","filter","gift","map","giftId","obstacle","obstacleId","GameOver","onClick","tryAgainCallback","width","height","href","Home","playCallback","App","onGameOver","currentPage","onPlay","onTryAgain","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.199efc77.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport './Gift.css';\n\nclass Gift extends Component {\n    constructor(props) {\n        super(props);\n\n        var giftType = Math.random() > 0.8 ? 'star' : 'gift';\n        var giftImage;\n\n        if (giftType === 'gift') {\n            var id = Math.round(Math.random() * 5);\n\n            giftImage = `presents-${id}.png`;\n        }\n\n\n\n        this.state = {\n            giftPositionX: window.innerWidth,\n            giftPositionY: Math.random() * (window.innerHeight - 60),\n            speed: Math.random() * (20 - 10) + 10,\n            intervalId: null,\n            type: giftType,\n            image: giftImage\n        }\n    }\n\n    componentDidMount() {\n        var moveIntervalId = setInterval(this.moveGift, 100);\n\n        this.setState({\n            intervalId: moveIntervalId\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.intervalId);\n    }\n\n    /*---------------------------------------------*/\n\n\n    moveGift = () => {\n        const newX = this.state.giftPositionX - this.state.speed;\n\n        // Verificar se o presente já saiu do ecrã à esquerda\n        if (newX < -60) {\n            // Remover gift\n            clearInterval(this.state.intervalId);\n            this.props.removeCallback(this.props.giftKey);\n        } else {\n            // Continua a andar\n            this.setState({\n                giftPositionX: newX\n            });\n\n            this.props.moveCallback(newX, this.state.giftPositionY, 60, 60, this.props.giftKey, this.state.type);\n        }\n    }\n\n    /*---------------------------------------------*/\n\n    render() {\n        switch (this.state.type) {\n            case 'star':\n                return (\n                    <div className='gift' style={{ top: this.state.giftPositionY, left: this.state.giftPositionX }}>\n                        <img className='presents1' src='star.png' alt=''></img>\n                    </div>\n                );\n\n            case 'gift':\n                return (\n                    <div className='gift' style={{ top: this.state.giftPositionY, left: this.state.giftPositionX }}>\n                        <img className='presents1' src={this.state.image} alt=''></img>\n                    </div>\n                );\n            default:\n                break;\n        }\n    }\n}\n\n\nexport default Gift;  ","import React from 'react';\nimport { Component } from 'react';\nimport './Santa.css';\n\n\nclass Santa extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionX: 10,\n            positionY: 0,\n        }\n    }\n\n    moveSantaDown = () => {\n        // Window (viewport) height: window.innerHeight\n        if (this.state.positionY < window.innerHeight - 55) {\n            var newY = this.state.positionY + 10;\n\n            this.setState({\n                positionY: newY\n            });\n\n            this.props.moveCallback(this.state.positionX, newY);\n        }\n\n    }\n\n    moveSantaUp = () => {\n        if (this.state.positionY > 0) {\n            var newY = this.state.positionY - 10;\n\n            this.setState({\n                positionY: newY\n            });\n\n            this.props.moveCallback(this.state.positionX, newY);\n        }\n\n    }\n\n\n    handleKeyPress = (event) => {\n        //keycode up=38  down= 40 (console.log (event.keyCode))\n        switch (event.keyCode) {\n            case 38:\n                this.moveSantaUp();\n                break;\n            case 40:\n                this.moveSantaDown();\n                break;\n            default:\n                break;\n        }\n    }\n\n\n\n    // controling the keyboard keys:\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleKeyPress, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.handleKeyPress, false);\n    }\n\n\n\n    render() {\n\n        return (\n\n            <div className='santa' style={{ top: this.state.positionY }}>\n                <img className='santa' src='santa.gif' alt=''></img>\n            </div>\n\n\n        )\n    }\n\n}\n\nexport default Santa;","import React from 'react';\nimport { Component } from 'react';\nimport './Obstacle.css';\n\nclass Obstacle extends Component {\n    constructor(props) {\n        super(props);\n\n        var id = Math.round(Math.random() * 2);\n        var obstacleImage = `obstacles-${id}.png`;\n\n        this.state = {\n            obstaclePositionX: window.innerWidth,\n            obstaclePositionY: Math.random() * (window.innerHeight - 60),\n            speed: Math.random() * (20 - 10) + 10,\n            intervalId: null,\n            image: obstacleImage\n        }\n    }\n\n    componentDidMount() {\n        var moveIntervalId = setInterval(this.moveObstacle, 100);\n\n        this.setState({\n            intervalId: moveIntervalId\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.intervalId);\n    }\n\n    /*---------------------------------------------*/\n\n\n    moveObstacle = () => {\n        const newX = this.state.obstaclePositionX - this.state.speed;\n\n        // Verificar se o obstaculo já saiu do ecrã à esquerda\n        if (newX < -60) {\n            // Remover obstaculo\n            clearInterval(this.state.intervalId);\n            this.props.removeCallback(this.props.obstacleKey);\n        } else {\n            // Continua a andar\n            this.setState({\n                obstaclePositionX: newX\n            });\n\n            this.props.moveCallback(newX, this.state.obstaclePositionY, 60, 60, this.props.obstacleKey, 'obstacle');\n        }\n    }\n\n    /*---------------------------------------------*/\n\n    render() {\n        return (\n            <div className='obstacle' style={{ top: this.state.obstaclePositionY, left: this.state.obstaclePositionX }}>\n                <img className='alien' src={this.state.image} alt=''></img>\n            </div>\n        )\n    }\n}\n\n\n\nexport default Obstacle;  ","import React from 'react';\nimport { Component } from 'react';\nimport './Game.css';\nimport Gift from './Gift.js';\nimport Santa from './Santa.js';\nimport Obstacle from './Obstacle.js';\nimport { isNumber } from 'util';\n\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n\n        // Ler record do local storage\n        var record = parseInt(localStorage.getItem('record'));\n\n        this.state = {\n            santaPositionX: 10,\n            santaPositionY: 0,\n            points: 0,\n            record: isNumber(record) ? record : 0,\n            giftsArray: [],\n            obstacleArray: [],\n            countdown: 3,\n            giftIntervalId: null,\n            obstacleIntervalId: null,\n            countdownIntervalId: null\n        }\n    }\n\n    componentDidMount() {\n        var giftInterval = setInterval(this.newGift, 2000);\n        var obstacleInterval = setInterval(this.newObstacle, 2500);\n        var countdownInterval = setInterval(this.countdown, 500);\n\n        this.setState({\n            giftIntervalId: giftInterval,\n            obstacleIntervalId: obstacleInterval,\n            countdownIntervalId: countdownInterval\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.giftIntervalId);\n        clearInterval(this.state.obstacleIntervalId);\n    }\n\n    /*---------------------------------------------*/\n\n    countdown = () => {\n        var newCountdown = this.state.countdown - 1;\n        this.setState({ countdown: newCountdown })\n\n        if (newCountdown === 0) {\n            clearInterval(this.state.countdownIntervalId);\n        }\n    }\n\n    // adicionar dinamicamente itens ao giftsArray\n    newGift = () => {\n        var gifts = this.state.giftsArray;\n\n        gifts.push(gifts.length); // ID do gift para depois poder remover\n\n        this.setState({\n            giftsArray: gifts\n        });\n    }\n\n    //eliminar Gift quando toca no santa ou no final da window\n    removeGift = (key) => {\n        var newGiftsArray = this.state.giftsArray;\n\n        newGiftsArray[key] = null;\n\n        this.setState({\n            giftsArray: newGiftsArray\n        });\n    }\n\n    // adicionar dinamicamente itens ao obsctacleArraykey\n    newObstacle = () => {\n        var obstacles = this.state.obstacleArray;\n\n        obstacles.push(obstacles.length); // ID do obstacle para depois poder remover\n\n        this.setState({\n            obstacleArray: obstacles\n        });\n    }\n\n    //eliminar Obstacle quando toca no santa ou no final da window\n    removeObstacle = (key) => {\n        var newObstacleArray = this.state.obstacleArray;\n\n        newObstacleArray[key] = null;\n\n        this.setState({\n            obstacleArray: newObstacleArray\n        });\n    }\n\n\n    gameOver = () => {\n        if (this.state.points > this.state.record) {\n            localStorage.setItem('record', this.state.points);//here I'm saving the record in local storage if the user makes more points than the record\n        }\n        this.props.gameOverCallback()\n    }\n\n    detectCollisionCallback = (x, y, w, h, key, type) => {\n        // https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection\n        var santaX = this.state.santaPositionX;\n        var santaY = this.state.santaPositionY;\n        var santaW = 300;\n        var santaH = 120;\n\n        if (santaX < x + w &&\n            santaX + santaW > x &&\n            santaY < y + h &&\n            santaY + santaH > y) {\n\n            switch (type) {\n                case 'star':\n                    this.setState({\n                        points: this.state.points + 10\n                    });\n                    this.removeGift(key);\n                    document.getElementById(\"hohoho\").play();\n                    break;\n\n                case 'gift':\n                    this.setState({\n                        points: this.state.points + 1\n                    });\n                    this.removeGift(key);\n                    document.getElementById(\"hohoho\").play();\n                    break;\n\n                default:\n                    this.gameOver();\n                    break;\n            }\n        }\n    }\n\n    saveSantaPositionCallback = (x, y) => {\n        this.setState({\n            santaPositionX: x,\n            santaPositionY: y\n        });\n    }\n\n    /*---------------------------------------------*/\n\n    render() {\n        const { countdown } = this.state;\n\n        if (countdown > 0) {\n            return (\n                <div className='countdown'>\n                    {countdown}\n                </div>\n            )\n\n        } else {\n\n            return (\n                <div className='game-container'>\n                    <div className=\"stars\"></div>\n                    <div className=\"twinkling\"></div>\n                    <div className=\"clouds\"></div>\n\n                    <audio id=\"background-music\" src=\"./background.mp3\" autoPlay loop />\n\n                    <div className='score'>\n                        <img className='presents1' src='presents-1.png' alt=''></img>\n                        <p>{this.state.points} (record: {this.state.record})</p>\n                    </div>\n                    <Santa moveCallback={this.saveSantaPositionCallback} />\n                    <audio id=\"hohoho\" src=\"./hohoho.wav\" />\n                    {\n                        this.state.giftsArray.filter(gift => gift !== null).map((giftId) => (\n                            <Gift key={giftId} giftKey={giftId} removeCallback={this.removeGift} moveCallback={this.detectCollisionCallback} />\n                        ))\n                    }\n                    {\n                        this.state.obstacleArray.filter(obstacle => obstacle !== null).map((obstacleId) => (\n                            <Obstacle key={obstacleId} obstacleKey={obstacleId} removeCallback={this.removeObstacle} moveCallback={this.detectCollisionCallback} />\n                        ))\n                    }\n                </div>\n            )\n        }\n    }\n}\n\nexport default Game;","import React from 'react';\nimport './GameOver.css';\n\n\n\n\n\nfunction GameOver(props) {\n    return (\n        <div className='gameover'>\n            <div className=\"snow foreground\"></div>\n            <div className=\"snow foreground layered\"></div>\n            <div className=\"snow middleground\"></div>\n            <div className=\"snow middleground layered\"></div>\n            <div className=\"snow background\"></div>\n            <div className=\"snow background layered\"></div>\n            <audio id=\"crash\" src=\"./crash.mp3\" autoPlay />\n            <div>We Crashed AGAIN?</div>\n            <div className='rudolf'>That's it Rudolf!!!! I'm bying robots!!!</div>\n            <div className='gif'><img src='robots.gif' alt='' ></img> </div>\n\n            <button className='tryagain' onClick={props.tryAgainCallback}>Try Again</button>\n            <div className='contact'>\n                <div className='raquel'><img src=\"raquel.png\" width='100px' alt=\"\" /></div>\n                <img src=\"linkedin.png\" alt=\"\" height=\"20rem\"></img>\n                <div className='linkedin'><a href=\"https://www.linkedin.com/in/ana-raquel-marques-85162679/\">Raquel Marques</a></div>\n\n            </div>\n        </div >\n    );\n}\n\nexport default GameOver;","import React from 'react';\nimport './HomePage.css';\n\n\nfunction Home(props) {\n\n    return (\n        <div className='intro'>\n            <div className='story'>\n                <h1 className='name'>Clumsy Santa </h1>\n\n                <p>Once upon a time...\"somehow\"...</p>\n                <p>Santa got distracted and lost a lot of presents </p>\n                <p>along the way...</p>\n                <img className='inlove' src='inlove.gif' alt=''></img>\n            </div>\n            <div className='start'>\n                <p>Will you help him to recover them?</p>\n                <div>\n                    <button className='go' onClick={props.playCallback}>Play</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Component } from 'react';\nimport Game from './Game.js'\nimport GameOver from './GameOver.js';\nimport Home from './Homepage.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: 'home'\n    }\n  }\n\n  onGameOver = () => {\n    this.setState({\n      currentPage: 'gameOver'\n    })\n  }\n\n  onPlay = () => {\n    this.setState({\n      currentPage: 'play'\n    })\n  }\n\n  onTryAgain = () => {\n    this.setState({\n      currentPage: 'play'\n    })\n  }\n\n  render() {\n    switch (this.state.currentPage) {\n      case 'home':\n        return (\n          <Home playCallback={this.onPlay} />\n        );\n\n      case 'play':\n        return (\n          <Game gameOverCallback={this.onGameOver} />\n        );\n\n      case 'gameOver':\n        return (\n          <GameOver tryAgainCallback={this.onTryAgain} />\n        );\n\n      default:\n        break;\n    }\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}